<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Shuo Yuan&#39;s Home Page</title>
        <link>https://iyuanshuo.com/</link>
        <description>这是 shuoyuan 的生活与技术博客！</description>
        <generator>Hugo 0.65.2 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>isaulyuan@gmail.com (Shuo Yuan)</managingEditor>
        
        
            <webMaster>isaulyuan@gmail.com (Shuo Yuan)</webMaster>
        
        
            <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
        
        <lastBuildDate>Wed, 26 Feb 2020 17:52:06 +0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss+xml" href="https://iyuanshuo.com/rss.xml" />
        
        
            <item>
                <title>Factorization Machines 因式分解机</title>
                <link>https://iyuanshuo.com/tech/factorization-machine-2018032810/</link>
                <guid isPermaLink="true">https://iyuanshuo.com/tech/factorization-machine-2018032810/</guid>
                <pubDate>Wed, 28 Mar 2018 10:01:12 +0000</pubDate>
                
                    <author>isaulyuan@gmail.com (Shuo Yuan)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description><![CDATA[<h2 id="概述">概述</h2>
<p>在使用线性模型，例如LR模型时，特征工程是很大一块工作，有时为了产生较好的效果需要人工进行一些特征的二维或者三维交叉。FM（Factorization machines）提供了一种思路可以自动进行特征交叉，同时能够处理非常稀疏数据，具有线性的时间复杂度，计算简单。</p>
<p>由于FM实现简单效果非常好，而且应用范围非常广，FM是近期非常火的技术，在比赛或者大公司都比较常见。</p>
<h2 id="fm优势">FM优势</h2>
<p>FM能够解决的问题及优点<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>：</p>
<ul>
<li>FM能够解决分类和回归问题</li>
<li>FM能够代替SVD、SVD++等进行矩阵分解</li>
<li>FM可以处理非常稀疏数据，此时SVM等模型会失效</li>
<li>FM线性时间复杂度，计算简单</li>
<li>FM可表示性较强，FM将模型参数表示为K维向量，向量之间可以交叉运算，即使两个交叉特征没有对应训练数据，也能表示出权重。</li>
</ul>
<h2 id="二维-fm">二维-FM</h2>
<p>先回顾一下线性回归模型，其建模时采用的函数是：</p>
<p>$$
\begin{aligned}
\hat y({\rm{x}}) &amp; = {\omega _0} + {\omega _1}{x_1} + {\omega _2}{x_2} +  \cdots  + {\omega _n}{x_n} \<br>
&amp;= {\omega <em>0} + \sum\limits</em>{i = 1}^n {{\omega _i}{x_i}} 
\end{aligned} \tag{1}
$$</p>
<p>从方程中可以看出各特征分量$x_i$和$x_j\ (i \ne j )$之间是相互孤立的，该模型仅考虑单个的特征分量，没有考虑特征分量之间的相互关系。</p>
<p>在$(1)$的基础上改写为：</p>
<p>$$
\begin{aligned}
\hat y({\rm{x}}) = {\omega <em>0} + \sum\limits</em>{i = 1}^n {{\omega <em>i}{x_i}}  + \sum\limits</em>{i = 1}^{n - 1} {\sum\limits_{j = i + 1}^n {{\omega _{ij}}{x_i}} {x_j}} 
\end{aligned} \tag{2}
$$</p>
<p>这样也将任意两个不同的特征向量之间的关系也考虑进来了。</p>
<p>但是，有一个问题就是，在稀疏数据中这种直接在${x_i} {x_j}$前面配上一个系数$\omega_{ij}$的方式会有很大的缺陷。因为对于观察样本中未出现过交互的特征分量，不能对相应的参数进行估计<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>。</p>
<p>一定要注意的是，在高度稀疏数据场景中，由于数据量的不足，样本中出现未交互的特征分量是很普遍的。</p>
<p>为了克服这个缺陷，我们在(2)中的系数$\omega_{ij}$上做文章，将其换成另外一种形式。针对每个维度的特征分量$x_i$，引入辅助向量：</p>
<p>$$
\begin{aligned}
{{\rm{v}}<em>i} = {({v</em>{i1}},{v_{i2}}, \cdots ,{v_{ik}})^T} \in {R^k},\ \ i = 1,2, \cdots ,n
\end{aligned}
$$</p>
<p>其中$k$为超参数，将(2)中的$\omega_{ij}$改写为：</p>
<p>$$
\begin{aligned}
{{\hat \omega }<em>{ij}} = {{\rm{v}}<em>i}^T{{\rm{v}}<em>j}: = \sum\limits</em>{l = 1}^k {{v</em>{il}}{x</em>{jl}}} 
\end{aligned}
$$</p>
<p>如此，我们可以获得FM的二维模型。</p>
<h3 id="模型">模型</h3>
<p>对于2次特征交叉的FM模型可以表示为<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>：</p>
<p>$$
\begin{aligned}
y(x) = {w_0} + \sum\limits_{i = 1}^n {({w_i}{x_i})}  + \sum\limits_{i = 1}^{n - 1} {\sum\limits_{j = i + 1}^n {( &lt; {v_i},{v_j} &gt; {x_i}{x_j})} } 
\end{aligned} \tag{3}
$$</p>
<p>其中模型参数有$w_0$为截距，$w_i$为一维特征权重，$v_i$为每一维度特征的分布式表示，也即$w_0$为整体偏置量，$W$对特征向量的每个分量的强度进行建模，$V$对特征向量中任意两个分量之间的关系进行建模。</p>
<p>其中特征交叉权重计算为:</p>
<p>$$
\begin{aligned}
&lt; {v_i},{v_j} &gt;  = \sum\limits_{f = 1}^k {{v_{i,f}}} {v_{j,f}}
\end{aligned} \tag{3.1}
$$</p>
<h3 id="二维-fm计算复杂度">二维-FM计算复杂度</h3>
<p>如果对式子(1)直接进行计算，那么其复杂度是$O(kn^2)$，但是我们可以通过简单的数学变换将其转化为$O(kn)$，由于前面两项的计算复杂度都是$O(kn)$，所以我们只需要对第三项进行处理<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>：</p>
<p>$$
\begin{aligned}
&amp;\sum\limits_{i = 1}^n {\sum\limits_{j = i + 1}^n {\left( { &lt; {v_i},{v_j} &gt; {x_i}{x_j}} \right)} } {\rm{ }} \<br>
&amp;= \frac{1}{2}\sum\limits_{i = 1}^n {\sum\limits_{j = 1}^n {\left( { &lt; {v_i},{v_j} &gt; {x_i}{x_j}} \right)} }  - \frac{1}{2}\sum\limits_{i = 1}^n  &lt;  {v_i},{v_i} &gt; {x_i}{x_i} \ 
&amp;= \frac{1}{2}\left( {\sum\limits_{i = 1}^n {\sum\limits_{j = 1}^n {\sum\limits_{f = 1}^k {\left( {{v_{i,f}}{v_{{j_f}}}{x_i}{x_j}} \right)} } }  - \sum\limits_{i = 1}^n {\sum\limits_{f = 1}^k {\left( {{v_{i,f}}{v_{i,f}}{x_i}{x_i}} \right)} } } \right) \<br>
&amp;= \frac{1}{2}\sum\limits_{f = 1}^k {\left( {\left( {\sum\limits_{i = 1}^n {{v_{i,f}}} {x_i}} \right)\left( {\sum\limits_{j = 1}^n {{v_{j,f}}} {x_j}} \right) - \sum\limits_{i = 1}^n {v_{i,f}^2} x_i^2} \right)} \<br>
&amp;= \frac{1}{2}\sum\limits_{f = 1}^k {\left( {{{\left( {\sum\limits_{i = 1}^n {{v_{i,f}}} {x_i}} \right)}^2} - \sum\limits_{i = 1}^n {v_{i,f}^2} x_i^2} \right)}
\end{aligned} \tag{4}
$$</p>
<p>相当于特征分布式表示中每一维度和特征进行求和平方和平方求和相减。</p>
<h3 id="二维-fm的梯度计算">二维-FM的梯度计算</h3>
<p>采用SGD进行模型计算 :</p>
<p>$$
\frac{\partial }{{\partial \theta }}y(x) = \left{ {\begin{array}{*{20}{l}}
{1,}&amp;{{\rm{if }}\ \theta \ {\rm{is}}\ {\omega <em>0}}\<br>
{{x_i},}&amp;{{\rm{if }}\ \theta\  {\rm{is}}\ {\omega <em>i}}\<br>
{{x_i}\sum\limits</em>{j = 1}^n {{v</em>{j,f}}} {x_j} - {v_{i,f}}x_i^2,}&amp;{{\rm{if }}\ \theta \ {\rm{is}}\ {\nu _{i,f}}}
\end{array}} \right.{\rm{ }} \tag{5}
$$</p>
<p>基于随机梯度的方式求解<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>：</p>
<p><img src="http://images.iyuanshuo.com//blog/article/libFM.PNG" alt=""></p>
<h2 id="fm应用">FM应用</h2>
<p>在很多应用中，FM可以取代常用模型并且能够取得不错效果，例如</p>
<ul>
<li>FM - SVM，能够处理稀疏特征</li>
<li>FM - MF</li>
<li>FM - SVD++</li>
<li>FM - PITF</li>
<li>FM - FPMC</li>
</ul>
<p>具体可以参考相关引用的论文。</p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p><a href="https://blog.csdn.net/fangqingan_java/article/details/50677340">【每周一文】Factorization Machines</a> <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p><a href="http://www.cnblogs.com/pinard/p/6370127.html">分解机(Factorization Machines)推荐算法原理</a> <a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3" role="doc-endnote">
<p><a href="https://blog.csdn.net/beyondjv610/article/details/79301683">Factorization Machines（因子分解机）</a> <a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4" role="doc-endnote">
<p><a href="https://dl.acm.org/citation.cfm?id=2168771">Factorization Machines with libFM. S Rendle</a> <a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://iyuanshuo.com/tech/">tech</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://iyuanshuo.com/tags/machinelearning/">machineLearning</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Zotero 文献管理与多设备同步</title>
                <link>https://iyuanshuo.com/tech/zotero-usage-2017062813/</link>
                <guid isPermaLink="true">https://iyuanshuo.com/tech/zotero-usage-2017062813/</guid>
                <pubDate>Wed, 28 Jun 2017 13:00:00 +0000</pubDate>
                
                    <author>isaulyuan@gmail.com (Shuo Yuan)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description><![CDATA[<p>Zotero 是一个比较好用的开源的文献管理软件。Zotero 及其浏览器插件 (chrome, firefox) 的存在使得文献的下载、整理、记录和导出变得非常方便舒心。此外，在相关插件的协助下 Zotero 可以极大的优化论文撰写过程的文献引用流程。然而随着软件的更新迭代，网上的教程有的部分不太准确。此文记录当前使用的软件版本下的软件配置。</p>
<h3 id="准备元素及系统环境">准备元素及系统环境</h3>
<ul>
<li>macOS Mojave (Windows 系统配置类似)</li>
<li>Zotero (<a href="https://www.zotero.org/download/">下载</a>)</li>
<li>zotero-better-bibtex (<a href="https://github.com/retorquere/zotero-better-bibtex/releases">下载</a>)</li>
<li>zotfile (<a href="https://github.com/jlegewie/zotfile/releases">下载</a>)</li>
<li>Zotero Connector (<a href="https://www.zotero.org/download/">下载</a>)</li>
<li>Zotero 账户</li>
</ul>
<h3 id="安装-zotero-及其插件">安装 Zotero 及其插件</h3>
<p>从 <a href="https://www.zotero.org/download/">Zotero 官网</a>下载软件，并安装相应的浏览器插件 Zotero Connector (for <a href="https://chrome.google.com/webstore/detail/zotero-connector/ekhagklcjbdpajgpjgmbionohlpdbjgc?hl=en">Chrome</a>)。</p>
<p>打开 Zotero 软件，点击菜单栏 <code>Tools</code> --&gt; <code>Add-ons</code>，进入 <code>Add-ons Manager</code>；点击右上角的<strong>齿轮</strong>图标，点击 <code>Install Add-on From File</code>，弹出文件浏览器，选中插件安装包 (xpi 文件) 并安装。</p>
<p><img src="http://images.iyuanshuo.com/zotero_add_on.png" alt="add_ons" style="zoom: 50%;" /></p>
<p><img src="http://images.iyuanshuo.com/zotero_install_plugin.png" alt="Install_plugin" style="zoom: 30%;" /></p>
<h3 id="zotero-配置">Zotero 配置</h3>
<ul>
<li>进入 <code>Preference</code>，在 <code>General</code> 下取消勾选 <code>Automatically take snapshots when creating items from web pages</code>。此选项用于为每个文献自动抓取网页快照，实际用处不大，反而产生许多琐碎的网页文件。</li>
</ul>
<p><img src="http://images.iyuanshuo.com/zotero_general_auto_snapshots.png" alt="zotero_general_auto_snapshots" style="zoom: 30%;" /></p>
<ul>
<li><code>Sync</code> 选项登陆，勾选 <code>Data Syncing</code> 下的两个选项。Zotero 官方提供的同步包括<strong>数据同步</strong>和<strong>文件同步</strong>。数据部分同步文献基础信息，空间没有限制。文件部分同步 pdf、笔记等附件，免费额度为300MB。借助插件 zotfile 实现网盘（如Onedrive，Dropbox等）同步附件可以有效的突破存储限制。</li>
</ul>
<p><img src="http://images.iyuanshuo.com/zotero_sync.png" alt="zotero_sync" style="zoom:30%;" /></p>
<ul>
<li>使用网盘Dropbox同步 pdf 文件；选项 <code>Tools</code> 进入 <code>ZotFile Preferences</code> 配置附件存放位置及整理规则，习惯于按照文献发表年份进行 pdf 文件分类。借助浏览器 Connector 下载的文献附件会被 ZotFile 根据自行设定的重命名规则进行重命名，并存放到网盘特定位置。</li>
</ul>
<p><img src="http://images.iyuanshuo.com/zotero_zotfile_dropbox.png" alt="zotero_zotfile_dropbox" style="zoom: 33%;" /></p>
<ul>
<li>Zotero 的附件存放设置需要与 ZotFile 相匹配，保证文献条目和附件的关联。</li>
</ul>
<p><img src="http://images.iyuanshuo.com/zotero_preference_dropbox.png" alt="zotero_preference_dropbox" style="zoom: 30%;" /></p>
<ul>
<li>使用 zotero-better-bibtex 导出 bib 文件，Citation key format 设置为 <code>[auth:lower][year][shorttitle1]</code>。当然也可自行设置 Cite Key 的格式，具体规则请参考<a href="https://retorque.re/zotero-better-bibtex/configuration/">官方文档</a>。该插件自动更新导出的 bib 文件功能为论文写作中的文献引用工作提供极大便利！</li>
</ul>
<hr>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://iyuanshuo.com/tech/">tech</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://iyuanshuo.com/tags/zotero/">Zotero</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Git 基本使用</title>
                <link>https://iyuanshuo.com/tech/git-usage-2017010520/</link>
                <guid isPermaLink="true">https://iyuanshuo.com/tech/git-usage-2017010520/</guid>
                <pubDate>Thu, 05 Jan 2017 20:00:00 +0000</pubDate>
                
                    <author>isaulyuan@gmail.com (Shuo Yuan)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description><![CDATA[<h2 id="私人-git-仓库搭建1">私人 Git 仓库搭建<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></h2>
<p>虽然 GitHub 社区服务已经非常不错，但由于其开源特质不适合托管私人项目，比如我大磕盐人用 LaTEX 撰写的论文。借助服务器搭建私人 Git 仓库用于 LaTEX 论文撰写和修改全流程管理是不二选择。通过 Git 托管论文可以借助其版本管理功能进行高效的修改对比校验等，比如老师给你修改之后的论文，使用版本对比修改的内容一目了然。</p>
<h3 id="搭建步骤">搭建步骤</h3>
<ul>
<li>安装 Git</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># macOS</span>
brew install  git
<span class="c1"># centos</span>
yum install -y git
<span class="c1"># ubuntu</span>  
sudo apt-get install git
</code></pre></td></tr></table>
</div>
</div><ul>
<li>创建一个 Git 用户用来运行 Git 服务；提示没有权限时加上<code>sudo</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">useradd git
passwd git <span class="c1"># 创建Git用户密码，客户机非免密登录时需要</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>创建仓库</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">su - git <span class="c1"># 切换到Git用户</span>
<span class="nb">cd</span> /home/git <span class="c1"># 进入Git用户的根目录</span>
mkdir test.git <span class="c1"># 创建test仓库</span>
<span class="nb">cd</span> test.git
git --bare init <span class="c1"># 仓库初始化，初始化仓库时一定要使用裸库否则不能 push</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="配置客户机免密登录">配置客户机免密登录</h3>
<p>收集需要免密登录的客户机公钥，一般位于<code>~/.ssh</code>或者<code>C:\Users\saul\.ssh</code> 中的 <code>id_rsa.pub</code>文件中；将公钥写入服务器的<code>/home/git/.ssh/authorized_keys</code>文件中（若没有则创建）。</p>
<ul>
<li>首先客户机生成并获取公钥：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">ssh-keygen -t rsa -C <span class="s2">&#34;youremail@email.com&#34;</span> <span class="c1"># 有配置GitHub公钥可直接使用</span>
cat ~/.ssh/id_rsa.pub <span class="c1"># 复制打印出的公钥</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>服务器配置</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> /home/git
mkdir .ssh
chmod <span class="m">700</span> .ssh
touch .ssh/authorized_keys
vi .ssh/authorized_keys <span class="c1"># 粘贴公钥</span>
chmod <span class="m">600</span> .ssh/authorized_keys  
</code></pre></td></tr></table>
</div>
</div><h3 id="客户机克隆仓库">客户机克隆仓库</h3>
<ul>
<li>正常未修改 SSH 端口：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git clone git@104.153.102.92:/home/git/test.git
</code></pre></td></tr></table>
</div>
</div><ul>
<li>修改 SSH 端口配置方式：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git clone ssh://git@104.153.102.92:10982/home/git/test.git
</code></pre></td></tr></table>
</div>
</div><h2 id="git-放弃本地修改">Git 放弃本地修改</h2>
<h3 id="尚未使用-git-add-缓存代码">尚未使用 <code>git add</code> 缓存代码</h3>
<p>可以使用 <code>git checkout -- filepathname</code> (比如：<code>git checkout -- readme.md</code>，不要忘记中间的 <code>--</code> ，不写就成了检出分支了！！)。放弃所有的文件修改可以使用 <code>git checkout .</code> 命令。</p>
<p>此命令用来放弃掉所有还没有加入到缓存区（就是 <code>git add</code> 命令）的修改：内容修改与整个文件删除。但是此命令不会删除掉刚新建的文件，因为刚新建的文件还没已有加入到 git 的管理系统中，所以对于 git 是未知的，自己手动删除就好了。</p>
<h3 id="已经使用-git-add-缓存代码">已经使用 <code>git add</code> 缓存代码</h3>
<p>可以使用 <code>git reset HEAD filepathname</code> （比如：<code>git reset HEAD readme.md</code>）来放弃指定文件的缓存，放弃所以的缓存可以使用 <code>git reset HEAD .</code> 命令。</p>
<p>此命令用来清除git对于文件修改的缓存，相当于撤销 <code>git add</code> 命令所在的工作。在使用本命令后，本地的修改并不会消失，而是回到了如(未使用git add缓存代码)所示的状态。继续用处理(未使用<code>git add</code>缓存代码)中的操作，就可以放弃本地的修改。</p>
<h3 id="已经使用-git-commit-提交代码">已经使用 <code>git commit</code> 提交代码</h3>
<p>可以使用 <code>git reset --hard HEAD^</code> 来回退到上一次commit的状态。此命令可以用来回退到任意版本：<code>git reset --hard commitid</code> 
你可以使用 <code>git log</code> 命令来查看git的提交历史。</p>
<ul>
<li>
<p>本地新增了一堆文件(并没有<code>git add</code>到暂存区)，想放弃修改。</p>
<ul>
<li>单个文件或文件夹：<code>rm filename</code>, <code>rm -rf dir</code></li>
<li>所有文件/文件夹：<code>git clean -xdf</code></li>
</ul>
</li>
<li>
<p>本地新增了一堆文件(已经git add到暂存区)，想放弃修改。</p>
<ul>
<li>单个文件/文件夹：<code>git reset HEAD filename</code></li>
<li>所有文件/文件夹：<code>git reset HEAD .</code></li>
</ul>
</li>
</ul>
<h2 id="git-版本回滚">Git 版本回滚</h2>
<p>首先查询历史对应不同版本的ID, 用于回退定位：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">git log --pretty<span class="o">=</span>oneline
</code></pre></td></tr></table>
</div>
</div><p>恢复到历史版本：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git reset --hard fae6966548e3ae76cfa7f38a461c438cf75ba965
</code></pre></td></tr></table>
</div>
</div><p>把修改推到远程服务器：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git push -f -u origin master
</code></pre></td></tr></table>
</div>
</div><p>重新更新就可以了：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git pull
</code></pre></td></tr></table>
</div>
</div><h2 id="仓库子模块的使用-2">仓库子模块的使用 <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></h2>
<p>项目中经常使用别人维护的模块，在 git 中使用子模块的功能能够大大提高开发效率。使用子模块后，不必负责子模块的维护，只需要在必要的时候同步更新子模块即可。</p>
<ul>
<li>添加子模块</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git submodule add url <span class="c1"># url 既可以是https也可以是ssh</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>克隆带子模块的仓库</li>
</ul>
<p>克隆的仓库中，子模块中没有代码，需要初始化及更新；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git submodule init <span class="c1"># 初始化子模块</span>
git submodule update <span class="c1"># 更新</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>子模块拉取远程更新代码</li>
</ul>
<p>如果想要在子模块中查看新工作，可以进入到<strong>子模块</strong>的目录中运行 <code>git fetch</code> 与 <code>git merge</code>，合并上游分支来更新本地代码。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git fetch
git merge origin/master
</code></pre></td></tr></table>
</div>
</div><p>如果不想在子目录中手动抓取与合并， 在主仓库的根目录运行 <code>git submodule update --remote</code>，Git 将会进入子模块然后抓取并更新。</p>
<hr>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p><a href="https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BA-Git"><em>服务器上的 Git</em></a> <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p><a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97">Git 工具 - 子模块</a> <a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://iyuanshuo.com/tech/">tech</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://iyuanshuo.com/tags/git/">Git</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>VPS 构建 IPv6 隧道</title>
                <link>https://iyuanshuo.com/tech/vps-add-ipv6-tunnel-2016111521/</link>
                <guid isPermaLink="true">https://iyuanshuo.com/tech/vps-add-ipv6-tunnel-2016111521/</guid>
                <pubDate>Tue, 15 Nov 2016 21:00:00 +0000</pubDate>
                
                    <author>isaulyuan@gmail.com (Shuo Yuan)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description><![CDATA[<p>鉴于有的 VPS 商家并没有原生的 IPv6 服务，可以使用 Hurricane Electric Free IPv6 Tunnel Broker 创建 IPv6 隧道为 VPS 提供 IPv6 支持。</p>
<h3 id="注册并创建-ipv6-通道">注册并创建 IPv6 通道</h3>
<ul>
<li>注册 <a href="https://www.tunnelbroker.net/">https://www.tunnelbroker.net/</a> （需要邮箱验证）</li>
<li>点击 Create Regular Tunnel（https://www.tunnelbroker.net/new_tunnel.php）</li>
<li>在 IPv4 Endpoint (Your side) 处填上 ECS 的 IPv4 地址在 Available Tunnel Servers 中选择 Hong Kong, HK（如果你面向海外用户，可以选择更接近目标用户的地区）</li>
<li>点击 Create Tunnel 后，通道就创建完成</li>
</ul>
<h3 id="配置-centos-使其支持-ipv6--搬瓦工服务器不需要此步骤">配置 Centos 使其支持 IPv6  （搬瓦工服务器不需要此步骤）</h3>
<p>阿里云默认镜像里面的CentOS 都是默认没有启用IPv6地址的，需要设置一番。</p>
<ul>
<li>编辑文件 <code>/etc/modprobe.d/disable_ipv6.conf</code>，注释以下相关的命令行：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">alias</span> net-pf-10 off
<span class="nb">alias</span> ipv6 off
options ipv6 <span class="nv">disable</span><span class="o">=</span>1
</code></pre></td></tr></table>
</div>
</div><ul>
<li>编辑文件 /etc/sysconfig/network，将其中的 <code>NETWORKING_IPV6=no</code> 改为 <code>NETWORKING_IPV6=yes</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># NETWORKING_IPV6=no</span>
<span class="nv">NETWORKING_IPV6</span><span class="o">=</span>yes
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>可以重启系统使其加载或者执行<code>depmod -a</code>和<code>service network restart</code>让其重载配置。</p>
</li>
<li>
<p>确认配置都生效后运行 <code>ifconfig</code> 命令，如果可以看到IPv6的地址即为成功。</p>
</li>
</ul>
<h3 id="配置-he-隧道地址">配置 HE 隧道地址</h3>
<p>在VPS上配置了IPv6环境后，需要配置添加IPv6隧道。在Hurricane Electric Free IPv6 Tunnel Broker默认有提供<strong>Linux-net-tools</strong>命令可以直接使用。</p>
<ul>
<li>
<p>回到he网页，点击Example Configurations。</p>
</li>
<li>
<p>选择<strong>Linux-net-tools</strong>并复制下面文本框的内容。</p>
</li>
<li>
<p>回到ssh，粘贴复制的内容并执行即可（Note：系统重启会失效，请自行写入脚本并设置开机启动）。</p>
</li>
</ul>
<p><em>Tips: Centos 7 可能会提示:</em>  <code>-bash: ifconfig: command not found</code></p>
<p><strong>解决方案：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">yum search ifconfig    <span class="c1"># 提示只要安装net-tools.x86_64即可</span>
yum install net-tools.x86_64 
</code></pre></td></tr></table>
</div>
</div><h3 id="设置ipv6开机自启">设置IPv6开机自启</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">vim /root/ipv6.sh
</code></pre></td></tr></table>
</div>
</div><p>输入如下内容：  <em>即从he网站上复制的<code>Linux-net-tools</code>的代码</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
ifconfig sit0 up
ifconfig sit0 inet6 tunnel ::66.220.18.42
ifconfig sit1 up
ifconfig sit1 inet6 add 2001:470:c:957::2/64
route -A inet6 add ::/0 dev sit1
</code></pre></td></tr></table>
</div>
</div><p>给文件增加可执行权限：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">chmod +x /root/ipv6.sh
</code></pre></td></tr></table>
</div>
</div><p>编辑启动管理文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">vim /etc/rc.d/rc.local
</code></pre></td></tr></table>
</div>
</div><p>在最下方加入下面一行代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">sh /root/ipv6.sh
</code></pre></td></tr></table>
</div>
</div><p>保存并退出，这样重启后也有 IPv6。</p>
<h3 id="测试ipv6隧道可用性">测试ipv6隧道可用性</h3>
<p>配置好隧道后，可以使用<code>ping6</code>命令进行验证。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">ping6 ipv6.baidu.com <span class="c1"># 如果你的服务器在国内可使用</span>
ping6 www.google.com <span class="c1"># 如果返回ipv6地址即为成功</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="解决谷歌访问出现验证码">解决谷歌访问出现验证码</h3>
<p>阿里云的较多海外机房在访问谷歌时会出现验证提示，可以强制使用IPv6访问谷歌来避免IP认证。</p>
<p>可将谷歌的网址放入 hosts 文件并指定 IPv6 地址解决。</p>
<p>编辑文件<code>vim /etc/hosts</code>并加入以下内容：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">2404:6800:4005:80a::2003 www.google.com.hk
2404:6800:4005:80a::2003 google.com.hk <span class="c1"># 服务器所在地区的后缀</span>
2404:6800:4005:80a::2003 www.google.com
2404:6800:4005:80a::2003 google.com <span class="c1"># ipv6地址可以改为ping6命令返回的地址，延迟会更小</span>
</code></pre></td></tr></table>
</div>
</div><p>如果hosts文件没有立刻生效，可以尝试使用<code>hostname xxx</code>刷新，如果依旧无效可尝试重启。</p>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://iyuanshuo.com/tech/">tech</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://iyuanshuo.com/tags/vps/">VPS</category>
                                
                            
                        
                    
                
            </item>
        
    </channel>
</rss>